name: 'Terraform V2'
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select the environment
        required: true
        default: 'Dev'
        options:
        - Dev
        - QA
        - STG
      Infra_type:
        type: choice
        description: Select the type of infrastructure
        required: true
        default: 'venuemaster-pimcore'
        options:
        - Frontend/Interno/IAC


defaults:
  run:
    shell: bash  
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env: 
     ROOT_PATH: '${{github.workspace}}/${{ github.event.inputs.Infra_type }}'

    steps:
    - name: Set environment
      id: environment
      uses: ASzc/change-string-case-action@v2
      with:
        string: ${{ github.event.inputs.environment }}
  
    - name: Checkout
      uses: actions/checkout@v3

    - name: Replace tokens in environment variable files
      uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '@@'
        tokenSuffix: '@@'
        files: '${{ env.ROOT_PATH }}/provider.tf'
      env: 
        WorkspaceTF: ${{vars.WorkspaceTF}}
        
    - name: check env.tfvars file
      run: |
        cd ${{ env.ROOT_PATH }}
        echo ${{ secrets.ARM_CLIENT_ID }}
        ls -ltr
        pwd
        cat provider.tf

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      id: init
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      #  STORAGE_ACCOUNT: ${{ vars.storageaccount }}
      #  CONTAINER_NAME: ${{ vars.container_name }}
      #  RESOURCE_GROUP: ${{ vars.ResourceGroup }}
      #  KEY: ${{ github.event.inputs.Infra_type }}-${{ github.event.inputs.environment }}.tfstate
      run: |
       rm -rf .terraform
       terraform init
      working-directory: ${{ env.ROOT_PATH }}

    #- name: Terraform Format
    #  id: fmt
    #  run: terraform fmt -check
    #  working-directory: ${{ env.ROOT_PATH }}
      
    #- name: Terraform Validate
    #  id: validate
    #  run: terraform validate -no-color
    #  working-directory: ${{ env.ROOT_PATH }}
      
    - name: Terraform Plan
      id: plan
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      run: terraform plan
      working-directory: ${{ env.ROOT_PATH }}

    #- name: Terraform Apply
    #  env:
    #    ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
    #    ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
    #    ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    #    ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    #  run: terraform apply -auto-approve -var-file="env.tfvars" -input=false
    #  working-directory: ${{ env.ROOT_PATH }}